name: Build and Push Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'dockerfiles/**'
  workflow_dispatch:

jobs:
  build-base-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Build Base Images
        run: |
          # Build base images
          BASE_DOCKERFILES=$(find dockerfiles/base_images -name 'Dockerfile*')
          
          for DOCKERFILE in $BASE_DOCKERFILES; do
            EXTENSION=$(echo $DOCKERFILE | sed 's/.*Dockerfile\.//')
            IMAGE_NAME=${EXTENSION:-default}

            TAG="ghcr.io/${{ github.repository }}/$IMAGE_NAME:latest"

            echo "Building and pushing base image: $TAG"

            docker buildx build --push --tag $TAG -f $DOCKERFILE $(dirname $DOCKERFILE)
          done

  build-app-images:
    runs-on: ubuntu-latest
    needs: build-base-images

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}

      - name: Build Application Images
        run: |
          # Build application images
          APP_DOCKERFILES=$(find dockerfiles/app_images -name 'Dockerfile*')
          
          for DOCKERFILE in $APP_DOCKERFILES; do
            EXTENSION=$(echo $DOCKERFILE | sed 's/.*Dockerfile\.//')
            IMAGE_NAME=${EXTENSION:-default}

            TAG="ghcr.io/${{ github.repository }}/$IMAGE_NAME:latest"

            echo "Building and pushing app image: $TAG"

            docker buildx build --push --tag $TAG -f $DOCKERFILE $(dirname $DOCKERFILE)
          done

  verify-images:
    runs-on: ubuntu-latest
    needs: build-app-images

    steps:
      - name: Verify images
        run: |
          echo "Listing Docker images in the GitHub Container Registry"
          curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
          "https://ghcr.io/v2/${{ github.repository }}/tags/list"
